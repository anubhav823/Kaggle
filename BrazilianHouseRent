# -*- coding: utf-8 -*-
"""
Created on Sat Dec 28 22:05:18 2019

@author: anubh
"""
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import GradientBoostingClassifier
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures

from sklearn.metrics import mean_squared_error
df=pd.read_csv("C:/Users/anubh/Desktop/houses_to_rent.csv")
df.describe()
del df['Unnamed: 0']
df.describe()

df.replace(to_replace ="acept", 
                 value =1,inplace=True) 
df=df.replace(to_replace="not acept",value=0)
df=df.replace(to_replace="furnished",value=1)
df=df.replace(to_replace="not furnished",value=0)

df.hoa=[x.strip('R$') for x in df.hoa]
df['rent amount']=[x.strip('R$') for x in df['rent amount']]
df['property tax']=[x.strip('R$') for x in df['property tax']]
df['fire insurance']=[x.strip('R$') for x in df['fire insurance']]
df['total']=[x.strip('R$') for x in df['total']]
df.total=[x.strip(",") for x in df.total]
'''
print(df['city'].unique())
print(df['rooms'].unique())
print(df['bathroom'].unique())
print(df['parking spaces'].unique())

df.hist()
plt.bar(df['city'], df['total']) 
plt.xlabel("city") 
plt.ylabel("total") 
plt.show() 

df.plot(kind='density', subplots=True, layout=(3,3), sharex=False)

df.plot.box() 
plt.boxplot(df['total'])
plt.show() 
df.plot.scatter(x ='rooms', y ='area') 

sns.boxplot(x=df['area'])
'''
def remove_outlier(df_in, col_name):
    q1 = df_in[col_name].quantile(0.25)
    q3 = df_in[col_name].quantile(0.75)
    iqr = q3-q1 #Interquartile range
    fence_low  = q1-1.5*iqr
    fence_high = q3+1.5*iqr
    df_out = df_in.loc[(df_in[col_name] > fence_low) & (df_in[col_name] < fence_high)]
    return df_out

df=remove_outlier(df,"area")
df=remove_outlier(df,"rooms")
df=remove_outlier(df,"bathroom")
df=remove_outlier(df,"parking spaces")
df=df.replace(to_replace="-",value="0")

df.floor = df['floor'].astype(int) 
df["total"] = df["total"].str.replace(",","").astype(int)
df=remove_outlier(df,"floor")

sns.boxplot(x=df['area'])
df.shape
sns.boxplot(x=df['rooms'])
df=remove_outlier(df,"rooms")
sns.boxplot(x=df.bathroom)

del df['rent amount']
del df['fire insurance']
del df['hoa']
del df['property tax']
sns.boxplot(x=df['parking spaces'])

df.info()

y=df.total
X=df.drop(['total','animal','floor'], axis = 1) 

corr=df.corr()


    
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)
lr = LinearRegression()

#polynomial check

rs_test=[]
order=[1,2,3,4]
for n in order:
    pr=PolynomialFeatures(degree=n)
    X_train_pr=pr.fit_transform(X_train)
    X_test_pr=pr.fit_transform(X_test)
    lr.fit(X_train_pr,y_train)
    rs_test.append(lr.score(X_test_pr,y_test))
    
    
regr.fit(X_train, y_train)
pred=regr.predict(X_test)

mse=mean_squared_error(y_test,pred)
sns.regplot(y_test,pred)
sns.residplot(y_test,pred)
